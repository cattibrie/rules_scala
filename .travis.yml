dist: xenial
sudo: required
language: sh

addons:
  apt:
    packages:
    - libxml2-utils

cache:
    directories:
     - .bazel_cache
     - ~/xdg_cache

_linux: &linux
  os: linux
_osx: &osx
  os: osx
  osx_image: xcode10.1
_windows:
  os: windows

###
#
# Want to update/change bazel versions?
#
#
# either
#    - If you're updating the default bazel version, change
#      default_bazel_version in .bazelversion
#    or
#    - If you want to add an additional bazel version to 
#      the build matrix, add below another job 
#.     with variable USE_BAZEL_VERSION=<desired-version>
#
#
###

jobs:
  include:
# Lint
    - name: "Lint"
      <<: *linux
      env: TEST_SCRIPT=test_lint XDG_CACHE_HOME=~/xdg_cache
# Test
    - name: "[linux] Test rules_scala"
      <<: *linux
      env: TEST_SCRIPT=test_rules_scala XDG_CACHE_HOME=~/xdg_cache
    - name: "[linux] Test reproducibility"
      <<: *linux
      env: TEST_SCRIPT=test_reproducibility XDG_CACHE_HOME=~/xdg_cache
    - name: "[linux] Test scala version"
      <<: *linux
      env: TEST_SCRIPT=test_version XDG_CACHE_HOME=~/xdg_cache
    - name: "[osx] Test rules_scala"
      <<: *osx
      env: TEST_SCRIPT=test_rules_scala XDG_CACHE_HOME=~/xdg_cache
    - name: "[osx] Test reproducibility"
      <<: *osx
      env: TEST_SCRIPT=test_reproducibility XDG_CACHE_HOME=~/xdg_cache
    - name: "[osx] Test scala version"
      <<: *osx
      env: TEST_SCRIPT=test_version XDG_CACHE_HOME=~/xdg_cache
    - name: "[linux] Dry test rules_scala + latest bazel version"
      <<: *linux
      env: TEST_SCRIPT=test_rules_scala XDG_CACHE_HOME=~/xdg_cache USE_BAZEL_VERSION=latest
    - name: "[linux] Examples"
      <<: *linux
      env: TEST_SCRIPT=test_examples XDG_CACHE_HOME=~/xdg_cache


  allow_failures:
    env: TEST_SCRIPT=test_rules_scala XDG_CACHE_HOME=~/xdg_cache USE_BAZEL_VERSION=latest

before_install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "windows" ]]; then
      choco install jdk8 -params 'installdir=c:\\java8'
      mkdir %USERPROFILE%\bazel
      powershell Invoke-WebRequest https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-windows-amd64.exe -OutFile %USERPROFILE%\bazel\bazel.exe
    fi
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      sudo wget -O /usr/local/bin/bazel https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-amd64
      sudo chmod +x /usr/local/bin/bazel
    fi
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      sudo wget -O /usr/local/bin/bazel https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-darwin-amd64
      sudo chmod +x /usr/local/bin/bazel
    fi
    cat .bazelrc.travis >> .bazelrc
    
script:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "windows" ]]; then
      powershell -Command 'Set-ExecutionPolicy RemoteSigned -scope CurrentUser'
      export JAVA_HOME='c:\\\\java8'
      export PATH=%PATH%;%USERPROFILE%\bazel
    fi
    bazel --version
    bash ./${TEST_SCRIPT}.sh ci
